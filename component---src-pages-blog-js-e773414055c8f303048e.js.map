{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/templates/BlogPage.js"],"names":["data","BlogPageUnfiltered","posts","allFile","nodes","map","childMarkdownRemark","tag","fixedNav","title","additionalKeywords","className","undefined","to","filter","p","node","key","frontmatter","slug","fluid","image","childImageSharp","alt","date","description","slug_date","pageContext","allMarkdownRemark"],"mappings":"6FAAA,iCAgCe,0BAAGA,EAAH,EAAGA,KAAH,OAAcC,6BAAmB,CAC9CD,OACAE,MAAOF,EAAKG,QAAQC,MAAMC,KAAI,qBAAGC,2B,kCClCnC,oKASA,SAASL,EAAT,GAAkD,EAApBD,KAAqB,IAAfE,EAAc,EAAdA,MAAOK,EAAO,EAAPA,IAWzC,OACE,kBAAC,IAAD,CAAQC,UAAU,EAAMC,MAAM,OAAOC,mBAAoB,CAAE,SACzD,yBAAKC,UAAU,oDACb,yBAAKA,UAAU,sCACb,wBAAIA,UAAU,cAAd,uBACA,8DAEIJ,EAAG,oCAAuCA,EAAvC,UAAiDK,GAExD,uBAAGD,UAAU,QACTJ,EACA,kBAAC,IAAD,CACEI,UAAU,oBACVE,GAAG,SAFL,IAIKN,EACH,yBAAKI,UAAU,6CAAf,MAEA,MAKV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,iCACXT,EAAMY,QAAO,SAACC,GAAD,OAAOA,KAAGV,KApCT,SAACW,GAAD,OACxB,yBAAKL,UAAU,wEAAwEM,IAAKD,EAAKE,YAAYC,MAC3G,kBAAC,IAAD,CAAKR,UAAU,6EAA6ES,MAAOJ,EAAKE,YAAYG,MAAMC,gBAAgBF,MAAOG,IAAKP,EAAKE,YAAYT,QACvK,wBAAIE,UAAU,cAAcK,EAAKE,YAAYT,OAC7C,uBAAGE,UAAU,cAAa,2BAAIK,EAAKE,YAAYM,OAC/C,uBAAGb,UAAU,0BAA0BK,EAAKE,YAAYO,aACxD,kBAAC,IAAD,CAAMd,UAAU,4BAA4BE,GAAI,SAAWG,EAAKE,YAAYQ,UAAY,IAAMV,EAAKE,YAAYC,MAA/G,kBAiCI,kBAAC,IAAD,SAoCK,0BAAGnB,EAAH,EAAGA,KAAM2B,EAAT,EAASA,YAAT,OAA2B1B,EAAmB,CAC3DD,OACAE,MAAOF,EAAK4B,kBAAkBxB,MAC9BG,IAAKoB,EAAYpB","file":"component---src-pages-blog-js-e773414055c8f303048e.js","sourcesContent":["import React from \"react\";\n\nimport { graphql } from \"gatsby\";\nimport { BlogPageUnfiltered } from \"../templates/BlogPage.js\";\n\nexport const query = graphql`\n  query {\n    allFile(filter: {sourceInstanceName: {eq: \"blog\"}}) {\n      nodes {\n        childMarkdownRemark {\n          frontmatter {\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            slug_date: date(formatString: \"YYYY/MM/DD\")\n            description\n            tags\n            image {\n              childImageSharp {\n                fluid(maxHeight: 1024) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Again, a sneaky way to use only one template\nexport default ({ data }) => BlogPageUnfiltered({\n  data,\n  posts: data.allFile.nodes.map(({ childMarkdownRemark }) => childMarkdownRemark)\n});\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql, Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport BackgroundImage from 'gatsby-background-image-es5';\nimport BlogSidebar from \"../components/BlogSidebar\";\n\nfunction BlogPageUnfiltered({ data, posts, tag }) {\n  const BlogPostListEntry = (node) => (\n    <div className=\"m-4 p-4 bg-theme-primary rect-slant-corners select-white inline-block\" key={node.frontmatter.slug}>\n      <Img className=\"md:float-left w-48 h-48 mx-auto md:mr-8 md: -ml-4 -mt-4 rect-slant-corners\" fluid={node.frontmatter.image.childImageSharp.fluid} alt={node.frontmatter.title} />\n      <h2 className=\"text-white\">{node.frontmatter.title}</h2>\n      <p className=\"text-white\"><b>{node.frontmatter.date}</b></p>\n      <p className=\"text-grey-lightest m-4\">{node.frontmatter.description}</p>\n      <Link className=\"text-white mx-4 slantlink\" to={\"/blog/\" + node.frontmatter.slug_date + \"/\" + node.frontmatter.slug}>Read More</Link>\n    </div>\n  );\n\n  return (\n    <Layout fixedNav={true} title=\"Blog\" additionalKeywords={[ 'blog' ]}>\n      <div className=\"bg-theme-primary select-white text-grey-lightest\">\n        <div className=\"container mx-auto py-24 pt-32 px-4\">\n          <h1 className=\"text-white\">Welcome to my blog!</h1>\n          <p>\n            Check out my latest posts below.\n            { tag ? `You're viewing all posts tagged '${tag}.'` : undefined }\n          </p>\n          <p className=\"mt-8\">\n            { tag ? (\n              <Link\n                className=\"pill align-middle\"\n                to=\"/blog\"\n              >\n                #{ tag }\n                <div className=\"inline-block ml-2 px-1 text-theme-primary\">&#x2715;</div>\n              </Link>\n            ) : [] }\n          </p>\n        </div>\n      </div>\n      \n      <div className=\"p-4\">\n        <div className=\"container m-auto w-full flex flex-col lg:flex-row\">\n          <div className=\"flex-grow py-12 flex flex-col\">\n            { posts.filter((p) => p).map(BlogPostListEntry) }\n          </div>\n          \n          <BlogSidebar />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport { BlogPageUnfiltered };\n\nexport const query = graphql`\n  query($tag : [String]) {\n    allMarkdownRemark(filter: {frontmatter: {tags: {in: $tag}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n      nodes {\n        frontmatter {\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          slug_date: date(formatString: \"YYYY/MM/DD\")\n          description\n          tags\n          image {\n            childImageSharp {\n              fluid(maxHeight: 1024) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ data, pageContext }) => BlogPageUnfiltered({\n  data,\n  posts: data.allMarkdownRemark.nodes,\n  tag: pageContext.tag,\n});\n\n"],"sourceRoot":""}